{"abi":[{"type":"function","name":"activated","inputs":[{"name":"subscriptionId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"execute","inputs":[{"name":"subscriptionId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isExecutable","inputs":[{"name":"subscriptionId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lastExecution","inputs":[{"name":"subscriptionId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"subscribe","inputs":[{"name":"_params","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"unsubscribe","inputs":[{"name":"subscriptionId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"StrategyExecuted","inputs":[{"name":"subscriptionId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StrategySubscribed","inputs":[{"name":"subscriptionId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"vault","type":"address","indexed":false,"internalType":"address"},{"name":"params","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"StrategyUnubscribed","inputs":[{"name":"subscriptionId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activated(uint256)":"32fad9d8","execute(uint256)":"fe0d94c1","isExecutable(uint256)":"4e395e2a","lastExecution(uint256)":"33f9d1d3","subscribe(bytes)":"4610b70a","unsubscribe(uint256)":"ad0b27fb"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"}],\"name\":\"StrategyExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"StrategySubscribed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"}],\"name\":\"StrategyUnubscribed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"}],\"name\":\"activated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"}],\"name\":\"isExecutable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"}],\"name\":\"lastExecution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"subscribe\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"}],\"name\":\"unsubscribe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementations must handle parameter validation, state management, and execution logic.Each strategy registered will be defined by a subscription id.\",\"kind\":\"dev\",\"methods\":{\"activated(uint256)\":{\"params\":{\"subscriptionId\":\"The ID of the strategy.\"},\"returns\":{\"_0\":\"True if the strategy is activated, false otherwise.\"}},\"execute(uint256)\":{\"params\":{\"subscriptionId\":\"The ID of the strategy to execute.\"},\"returns\":{\"_0\":\"True if the strategy was successfully executed, false otherwise.\"}},\"isExecutable(uint256)\":{\"params\":{\"subscriptionId\":\"The ID of the strategy.\"},\"returns\":{\"_0\":\"True if the strategy is executable, false otherwise.\"}},\"lastExecution(uint256)\":{\"params\":{\"subscriptionId\":\"The ID of the strategy.\"},\"returns\":{\"_0\":\"The last execution timestamp.\"}},\"subscribe(bytes)\":{\"params\":{\"_params\":\"The parameters of the strategy encoded as bytes.\"},\"returns\":{\"_0\":\"The ID of the subscribed strategy.\"}},\"unsubscribe(uint256)\":{\"params\":{\"subscriptionId\":\"The ID of the strategy to unsubscribe from.\"}}},\"title\":\"Strategy Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activated(uint256)\":{\"notice\":\"Checks if a strategy is activated.\"},\"execute(uint256)\":{\"notice\":\"Executes a strategy.\"},\"isExecutable(uint256)\":{\"notice\":\"Checks if a strategy is executable.\"},\"lastExecution(uint256)\":{\"notice\":\"Returns the last execution timestamp of a strategy.\"},\"subscribe(bytes)\":{\"notice\":\"Subscribes to a strategy with the given parameters.\"},\"unsubscribe(uint256)\":{\"notice\":\"Unsubscribes from a strategy.\"}},\"notice\":\"Defines a standard interface for creating new strategies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":aave-v3-core/=lib/aave-v3-origin/src/core/\",\":aave-v3-origin/=lib/aave-v3-origin/\",\":aave-v3-periphery/=lib/aave-v3-origin/src/periphery/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/aave-v3-origin/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-utils/=lib/aave-v3-origin/lib/solidity-utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"src/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0aec56142d6e8efde4a3fc4cb3af46d3acfb509a3f4d6c1088154dc24c50aedb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c1a923cbb61911ce9bada7a30a0f51a0b90458ff567158adeebbe8cf58fd74b\",\"dweb:/ipfs/QmatVBUDHf14LFxD4Gykxyb6WYCpLmUr4xA5hyhArhF2jz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256","indexed":false}],"type":"event","name":"StrategyExecuted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256","indexed":false},{"internalType":"address","name":"vault","type":"address","indexed":false},{"internalType":"bytes","name":"params","type":"bytes","indexed":false}],"type":"event","name":"StrategySubscribed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256","indexed":false}],"type":"event","name":"StrategyUnubscribed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256"}],"stateMutability":"view","type":"function","name":"activated","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"execute","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256"}],"stateMutability":"view","type":"function","name":"isExecutable","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256"}],"stateMutability":"view","type":"function","name":"lastExecution","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"_params","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"subscribe","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"unsubscribe"}],"devdoc":{"kind":"dev","methods":{"activated(uint256)":{"params":{"subscriptionId":"The ID of the strategy."},"returns":{"_0":"True if the strategy is activated, false otherwise."}},"execute(uint256)":{"params":{"subscriptionId":"The ID of the strategy to execute."},"returns":{"_0":"True if the strategy was successfully executed, false otherwise."}},"isExecutable(uint256)":{"params":{"subscriptionId":"The ID of the strategy."},"returns":{"_0":"True if the strategy is executable, false otherwise."}},"lastExecution(uint256)":{"params":{"subscriptionId":"The ID of the strategy."},"returns":{"_0":"The last execution timestamp."}},"subscribe(bytes)":{"params":{"_params":"The parameters of the strategy encoded as bytes."},"returns":{"_0":"The ID of the subscribed strategy."}},"unsubscribe(uint256)":{"params":{"subscriptionId":"The ID of the strategy to unsubscribe from."}}},"version":1},"userdoc":{"kind":"user","methods":{"activated(uint256)":{"notice":"Checks if a strategy is activated."},"execute(uint256)":{"notice":"Executes a strategy."},"isExecutable(uint256)":{"notice":"Checks if a strategy is executable."},"lastExecution(uint256)":{"notice":"Returns the last execution timestamp of a strategy."},"subscribe(bytes)":{"notice":"Subscribes to a strategy with the given parameters."},"unsubscribe(uint256)":{"notice":"Unsubscribes from a strategy."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v3-core/=lib/v3-core/","@uniswap/v3-periphery/=lib/v3-periphery/contracts/","aave-v3-core/=lib/aave-v3-origin/src/core/","aave-v3-origin/=lib/aave-v3-origin/","aave-v3-periphery/=lib/aave-v3-origin/src/periphery/","chainlink/=lib/chainlink/","ds-test/=lib/aave-v3-origin/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity-utils/=lib/aave-v3-origin/lib/solidity-utils/","v3-core/=lib/v3-core/","v3-periphery/=lib/v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IStrategy.sol":"IStrategy"},"evmVersion":"shanghai","libraries":{}},"sources":{"src/interfaces/IStrategy.sol":{"keccak256":"0x0aec56142d6e8efde4a3fc4cb3af46d3acfb509a3f4d6c1088154dc24c50aedb","urls":["bzz-raw://7c1a923cbb61911ce9bada7a30a0f51a0b90458ff567158adeebbe8cf58fd74b","dweb:/ipfs/QmatVBUDHf14LFxD4Gykxyb6WYCpLmUr4xA5hyhArhF2jz"],"license":"MIT"}},"version":1},"id":89}